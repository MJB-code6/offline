"use strict";const CACHE_FIRST="precache",FALLBACK_CACHE="fallback";var online=!0,db,precacheAssets=precacheAssets||[];self.addEventListener("install",function(e){return self.skipWaiting()}),self.addEventListener("activate",function(e){e.waitUntil(self.clients.claim())}),self.addEventListener("fetch",function(e){e.respondWith(caches.match(e.request).then(function(t){return online?fetch(e.request):t})["catch"](function(e){}))}),self.addEventListener("message",function(e){if("cache"===e.data.command&&(precacheAssets=precacheAssets.concat(e.data.info),caches.open("precache").then(function(e){return e.addAll(precacheAssets)})["catch"](function(){})),"fallback"===e.data.command&&caches.open("fallback").then(function(t){return t.add(e.data.info)}),"online"===e.data.command&&(online=e.data.info),"createDB"===e.data.command){var t=indexedDB.open("DEFERRED",1);t.onupgradeneeded=function(e){db=e.target.result;db.createObjectStore("deferredRequests",{keyPath:"domain"})},t.onsuccess=function(t){db=t.target.result;var a=db.transaction("deferredRequests","readwrite").objectStore("deferredRequests");a.add({domain:e.data.info,requests:[]})}}if("queue"===e.data.command){var a=indexedDB.open("DEFERRED",1);a.onsuccess=function(t){var a=t.target.result,n=a.transaction(["deferredRequests"],"readwrite").objectStore("deferredRequests"),c=n.get(e.data.info.domain);c.onsuccess=function(t){var a=c.result.requests;a.push({data:e.data.info.dataObj,callback:e.data.info.deferredFunc});var s=n.put({domain:e.data.info.domain,requests:a});s.onerror=function(e){},s.onsuccess=function(e){}}}}});